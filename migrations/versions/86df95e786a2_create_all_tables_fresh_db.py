"""create_all_tables_fresh_db

Revision ID: 86df95e786a2
Revises: add_missing_tables
Create Date: 2025-08-07 16:10:48.753338

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '86df95e786a2'
down_revision: Union[str, None] = 'add_missing_tables'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('listings',
    sa.Column('listing_id', sa.Integer(), nullable=False),
    sa.Column('yad2_url_token', sa.String(length=10), nullable=False),
    sa.Column('price', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('property_type', sa.String(length=50), nullable=True),
    sa.Column('rooms_count', sa.DECIMAL(precision=3, scale=1), nullable=True),
    sa.Column('square_meter', sa.Integer(), nullable=True),
    sa.Column('street', sa.String(length=150), nullable=True),
    sa.Column('house_number', sa.String(length=20), nullable=True),
    sa.Column('floor', sa.Integer(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('listing_id'),
    sa.UniqueConstraint('yad2_url_token')
    )
    op.create_table('neighborhood_features',
    sa.Column('neighborhood_id', sa.Integer(), nullable=False),
    sa.Column('hebrew_name', sa.String(length=255), nullable=False),
    sa.Column('cultural_level', sa.Float(), nullable=True),
    sa.Column('religiosity_level', sa.Float(), nullable=True),
    sa.Column('communality_level', sa.Float(), nullable=True),
    sa.Column('kindergardens_level', sa.Float(), nullable=True),
    sa.Column('maintenance_level', sa.Float(), nullable=True),
    sa.Column('mobility_level', sa.Float(), nullable=True),
    sa.Column('parks_level', sa.Float(), nullable=True),
    sa.Column('peaceful_level', sa.Float(), nullable=True),
    sa.Column('shopping_level', sa.Float(), nullable=True),
    sa.Column('safety_level', sa.Float(), nullable=True),
    sa.Column('nightlife_level', sa.Float(), nullable=True),
    sa.Column('feature_vector', postgresql.ARRAY(sa.Float()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('neighborhood_id')
    )
    op.create_table('neighborhoods',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('hebrew_name', sa.String(length=150), nullable=False),
    sa.Column('english_name', sa.String(length=150), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('english_name'),
    sa.UniqueConstraint('hebrew_name')
    )
    op.create_table('property_conditions',
    sa.Column('condition_id', sa.Integer(), nullable=False),
    sa.Column('condition_name_he', sa.String(length=100), nullable=True),
    sa.Column('condition_name_en', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('condition_id')
    )
    op.create_table('tags',
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.Column('tag_name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('tag_id')
    )
    op.create_table('user_preference_vectors',
    sa.Column('user_id', sa.String(length=255), nullable=False),
    sa.Column('cultural_level', sa.Float(), nullable=False),
    sa.Column('religiosity_level', sa.Float(), nullable=False),
    sa.Column('communality_level', sa.Float(), nullable=False),
    sa.Column('kindergardens_level', sa.Float(), nullable=False),
    sa.Column('maintenance_level', sa.Float(), nullable=False),
    sa.Column('mobility_level', sa.Float(), nullable=False),
    sa.Column('parks_level', sa.Float(), nullable=False),
    sa.Column('peaceful_level', sa.Float(), nullable=False),
    sa.Column('shopping_level', sa.Float(), nullable=False),
    sa.Column('safety_level', sa.Float(), nullable=False),
    sa.Column('nightlife_level', sa.Float(), nullable=False),
    sa.Column('preference_vector', postgresql.ARRAY(sa.Float()), nullable=False),
    sa.Column('questionnaire_version', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('firebase_uid', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_firebase_uid'), 'users', ['firebase_uid'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('favorites',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('listing_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['listing_id'], ['listings.listing_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.firebase_uid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_favorites_id'), 'favorites', ['id'], unique=False)
    op.create_index(op.f('ix_favorites_user_id'), 'favorites', ['user_id'], unique=False)
    op.create_table('images',
    sa.Column('image_id', sa.Integer(), nullable=False),
    sa.Column('listing_id', sa.Integer(), nullable=False),
    sa.Column('image_url', sa.TEXT(), nullable=False),
    sa.ForeignKeyConstraint(['listing_id'], ['listings.listing_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('image_id')
    )
    op.create_table('listing_metadata',
    sa.Column('listing_id', sa.Integer(), nullable=False),
    sa.Column('neighborhood_id', sa.Integer(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('subcategory_id', sa.Integer(), nullable=True),
    sa.Column('ad_type', sa.String(length=20), nullable=True),
    sa.Column('property_condition_id', sa.Integer(), nullable=True),
    sa.Column('cover_image_url', sa.TEXT(), nullable=True),
    sa.Column('video_url', sa.TEXT(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['listing_id'], ['listings.listing_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['neighborhood_id'], ['neighborhoods.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['property_condition_id'], ['property_conditions.condition_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('listing_id')
    )
    op.create_table('listing_tags',
    sa.Column('listing_id', sa.BIGINT(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['listing_id'], ['listings.listing_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.tag_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('listing_id', 'tag_id')
    )
    op.create_table('neighborhood_metadata',
    sa.Column('neighborhood_id', sa.Integer(), nullable=False),
    sa.Column('overview', sa.TEXT(), nullable=True),
    sa.Column('external_city_id', sa.Integer(), nullable=True),
    sa.Column('external_area_id', sa.Integer(), nullable=True),
    sa.Column('external_top_area_id', sa.Integer(), nullable=True),
    sa.Column('external_doc_count', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['neighborhood_id'], ['neighborhoods.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('neighborhood_id')
    )
    op.create_table('neighborhood_metrics',
    sa.Column('neighborhood_id', sa.Integer(), nullable=False),
    sa.Column('avg_sale_price', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('avg_rental_price', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('social_economic_index', sa.Float(), nullable=True),
    sa.Column('popular_political_party', sa.String(length=100), nullable=True),
    sa.Column('school_rating', sa.Float(), nullable=True),
    sa.Column('beach_distance_km', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['neighborhood_id'], ['neighborhoods.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('neighborhood_id')
    )
    op.create_table('user_filters',
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('neighborhood', sa.String(), nullable=True),
    sa.Column('price_min', sa.Integer(), nullable=False),
    sa.Column('price_max', sa.Integer(), nullable=False),
    sa.Column('rooms_min', sa.Float(), nullable=False),
    sa.Column('rooms_max', sa.Float(), nullable=False),
    sa.Column('size_min', sa.Integer(), nullable=False),
    sa.Column('size_max', sa.Integer(), nullable=False),
    sa.Column('options', sa.String(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.firebase_uid'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_index(op.f('ix_user_filters_user_id'), 'user_filters', ['user_id'], unique=False)
    op.create_table('user_preferences',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('pace_of_life', sa.Enum('RELAXED', 'BALANCED', 'ENERGETIC', name='paceoflife'), nullable=True),
    sa.Column('commute_pref_pt', sa.Boolean(), nullable=True),
    sa.Column('commute_pref_walk', sa.Boolean(), nullable=True),
    sa.Column('commute_pref_bike', sa.Boolean(), nullable=True),
    sa.Column('commute_pref_car', sa.Boolean(), nullable=True),
    sa.Column('commute_pref_wfh', sa.Boolean(), nullable=True),
    sa.Column('proximity_pref_shops', sa.Boolean(), nullable=True),
    sa.Column('proximity_pref_gym', sa.Boolean(), nullable=True),
    sa.Column('max_commute_time', sa.Integer(), nullable=True),
    sa.Column('dog_park_nearby', sa.Enum('YES', 'NO', 'NO_PREFERENCE', name='yesnopref'), nullable=True),
    sa.Column('learning_space_nearby', sa.Enum('YES', 'NO', 'NO_PREFERENCE', name='yesnopref'), nullable=True),
    sa.Column('proximity_beach_importance', sa.Enum('NOT_IMPORTANT', 'SOMEWHAT', 'VERY', name='importancescale'), nullable=True),
    sa.Column('safety_importance', sa.Enum('NOT_IMPORTANT', 'SOMEWHAT', 'VERY', name='importancescale'), nullable=True),
    sa.Column('green_spaces_importance', sa.Enum('NOT_IMPORTANT', 'SOMEWHAT', 'VERY', name='importancescale'), nullable=True),
    sa.Column('medical_center_importance', sa.Enum('NOT_IMPORTANT', 'SOMEWHAT', 'VERY', name='importancescale'), nullable=True),
    sa.Column('schools_importance', sa.Enum('NOT_IMPORTANT', 'SOMEWHAT', 'VERY', name='importancescale'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_index(op.f('ix_user_preferences_user_id'), 'user_preferences', ['user_id'], unique=True)
    op.create_table('view_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('listing_id', sa.Integer(), nullable=False),
    sa.Column('viewed_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['listing_id'], ['listings.listing_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.firebase_uid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_view_history_id'), 'view_history', ['id'], unique=False)
    op.create_index(op.f('ix_view_history_listing_id'), 'view_history', ['listing_id'], unique=False)
    op.create_index(op.f('ix_view_history_user_id'), 'view_history', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_view_history_user_id'), table_name='view_history')
    op.drop_index(op.f('ix_view_history_listing_id'), table_name='view_history')
    op.drop_index(op.f('ix_view_history_id'), table_name='view_history')
    op.drop_table('view_history')
    op.drop_index(op.f('ix_user_preferences_user_id'), table_name='user_preferences')
    op.drop_table('user_preferences')
    op.drop_index(op.f('ix_user_filters_user_id'), table_name='user_filters')
    op.drop_table('user_filters')
    op.drop_table('neighborhood_metrics')
    op.drop_table('neighborhood_metadata')
    op.drop_table('listing_tags')
    op.drop_table('listing_metadata')
    op.drop_table('images')
    op.drop_index(op.f('ix_favorites_user_id'), table_name='favorites')
    op.drop_index(op.f('ix_favorites_id'), table_name='favorites')
    op.drop_table('favorites')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_firebase_uid'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('user_preference_vectors')
    op.drop_table('tags')
    op.drop_table('property_conditions')
    op.drop_table('neighborhoods')
    op.drop_table('neighborhood_features')
    op.drop_table('listings')
    # ### end Alembic commands ###
